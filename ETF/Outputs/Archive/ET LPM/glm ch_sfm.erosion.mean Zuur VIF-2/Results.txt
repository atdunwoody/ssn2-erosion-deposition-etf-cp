
> model_name
[1] "glm ch_sfm.erosion.mean Zuur VIF-2"

> model_formula
ch_sfm.erosion.mean ~ ws_accum_precip_mean + ch_slope.median + 
    ch_curvature.median + ch_channel_width + ch_change.in.slope.over.width + 
    ch_channel.width.over.valley.width + ch_stream.power.central.diff + 
    hs_flow.accumulation.max + hs_slope.median + hs_aspect.median + 
    hs_curvature.median + hs_bare.earth.mean + hs_dnbr.median

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
       Min         1Q     Median         3Q        Max 
-0.0299497 -0.0088900  0.0007964  0.0109017  0.0337692 

Coefficients (fixed):
                                   Estimate Std. Error z value Pr(>|z|)    
(Intercept)                        -1.02218    0.09442 -10.826  < 2e-16 ***
ws_accum_precip_mean                0.03895    0.21216   0.184 0.854331    
ch_slope.median                     0.08513    0.10576   0.805 0.420872    
ch_curvature.median                 0.16541    0.07154   2.312 0.020764 *  
ch_channel_width                   -0.23421    0.12523  -1.870 0.061463 .  
ch_change.in.slope.over.width       0.02371    0.06982   0.340 0.734168    
ch_channel.width.over.valley.width  0.14594    0.11518   1.267 0.205153    
ch_stream.power.central.diff        0.06297    0.07679   0.820 0.412200    
hs_flow.accumulation.max            0.01553    0.06444   0.241 0.809566    
hs_slope.median                    -0.22191    0.06065  -3.659 0.000254 ***
hs_aspect.median                    0.08497    0.15991   0.531 0.595173    
hs_curvature.median                -0.15691    0.07880  -1.991 0.046467 *  
hs_bare.earth.mean                 -0.04653    0.09284  -0.501 0.616250    
hs_dnbr.median                     -0.23946    0.09484  -2.525 0.011579 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.3318

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  2.131e-01
  tailup exponential         range  7.886e+00
     euclid gaussian  de (parsill)  1.137e-03
     euclid gaussian         range  6.833e+01
              nugget        nugget  1.612e-02
          dispersion    dispersion  1.260e+02


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)    0.332  
2 tailup_de             0.618  
3 taildown_de           0      
4 euclid_de             0.00330
5 nugget                0.0468 

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 14 × 7
   term                               estimate std.error statistic  p.value conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>
 1 (Intercept)                         -1.02      0.0944   -10.8   0         -1.21    -0.837  
 2 ch_change.in.slope.over.width        0.0237    0.0698     0.340 0.734     -0.113    0.161  
 3 ch_channel.width.over.valley.width   0.146     0.115      1.27  0.205     -0.0798   0.372  
 4 ch_channel_width                    -0.234     0.125     -1.87  0.0615    -0.480    0.0112 
 5 ch_curvature.median                  0.165     0.0715     2.31  0.0208     0.0252   0.306  
 6 ch_slope.median                      0.0851    0.106      0.805 0.421     -0.122    0.292  
 7 ch_stream.power.central.diff         0.0630    0.0768     0.820 0.412     -0.0875   0.213  
 8 hs_aspect.median                     0.0850    0.160      0.531 0.595     -0.228    0.398  
 9 hs_bare.earth.mean                  -0.0465    0.0928    -0.501 0.616     -0.229    0.135  
10 hs_curvature.median                 -0.157     0.0788    -1.99  0.0465    -0.311   -0.00246
11 hs_dnbr.median                      -0.239     0.0948    -2.52  0.0116    -0.425   -0.0536 
12 hs_flow.accumulation.max             0.0155    0.0644     0.241 0.810     -0.111    0.142  
13 hs_slope.median                     -0.222     0.0607    -3.66  0.000254  -0.341   -0.103  
14 ws_accum_precip_mean                 0.0390    0.212      0.184 0.854     -0.377    0.455  

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1    78    14     6  128.  140.  141.  -64.1   0.0181            0.332

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0433 0.0905 0.301 0.505

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.9822, p-value = 0.3473


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 29.614, df = 13, p-value = 0.005351


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -1.5395, p-value = 0.9382
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
     -0.132659676      -0.012987013       0.006042682 


> # Stop redirecting output
> sink()
