
> print(model_name)
[1] "glm ch_sfm.erosion.mean Zuur VIF-3"

> print(model_formula)
ch_sfm.erosion.mean ~ ws_mi60_mean + ws_RV.Silt + ws_Kw + ch_slope.median + 
    ch_curvature.median + ch_channel_width + ch_central.slope.difference + 
    ch_channel.width.over.valley.width + ch_stream.power.central.diff + 
    hs_flow.accumulation.max + hs_slope.median + hs_aspect.median + 
    hs_curvature.median + hs_bare.earth.mean + hs_dnbr.median

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
       Min         1Q     Median         3Q        Max 
-3.855e-05 -1.140e-05  1.025e-07  1.397e-05  4.178e-05 

Coefficients (fixed):
                                   Estimate Std. Error z value Pr(>|z|)    
(Intercept)                        -1.00190    0.16958  -5.908 3.46e-09 ***
ws_mi60_mean                       11.46086   60.36963   0.190  0.84943    
ws_RV.Silt                          0.03957    0.17306   0.229  0.81913    
ws_Kw                               0.12737    0.34730   0.367  0.71382    
ch_slope.median                     0.09480    0.12518   0.757  0.44887    
ch_curvature.median                 0.13932    0.07590   1.835  0.06644 .  
ch_channel_width                   -0.25966    0.13284  -1.955  0.05063 .  
ch_central.slope.difference         0.02952    0.07033   0.420  0.67469    
ch_channel.width.over.valley.width  0.20233    0.12656   1.599  0.10989    
ch_stream.power.central.diff        0.05691    0.07557   0.753  0.45142    
hs_flow.accumulation.max            0.03293    0.07322   0.450  0.65284    
hs_slope.median                    -0.19217    0.06554  -2.932  0.00337 ** 
hs_aspect.median                    0.10607    0.16925   0.627  0.53083    
hs_curvature.median                -0.15751    0.07936  -1.985  0.04718 *  
hs_bare.earth.mean                 -0.04097    0.11041  -0.371  0.71061    
hs_dnbr.median                     -0.23454    0.10424  -2.250  0.02445 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.3335

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  1.668e-01
  tailup exponential         range  1.059e+01
     euclid gaussian  de (parsill)  5.176e-02
     euclid gaussian         range  1.609e+02
              nugget        nugget  7.193e-02
          dispersion    dispersion  1.027e+05


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)      0.334
2 tailup_de               0.383
3 taildown_de             0    
4 euclid_de               0.119
5 nugget                  0.165

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 16 × 7
   term                               estimate std.error statistic       p.value   conf.low  conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>         <dbl>      <dbl>      <dbl>
 1 (Intercept)                         -1.00      0.170     -5.91  0.00000000346   -1.33     -0.670   
 2 ch_central.slope.difference          0.0295    0.0703     0.420 0.675           -0.108     0.167   
 3 ch_channel.width.over.valley.width   0.202     0.127      1.60  0.110           -0.0457    0.450   
 4 ch_channel_width                    -0.260     0.133     -1.95  0.0506          -0.520     0.000707
 5 ch_curvature.median                  0.139     0.0759     1.84  0.0664          -0.00945   0.288   
 6 ch_slope.median                      0.0948    0.125      0.757 0.449           -0.151     0.340   
 7 ch_stream.power.central.diff         0.0569    0.0756     0.753 0.451           -0.0912    0.205   
 8 hs_aspect.median                     0.106     0.169      0.627 0.531           -0.226     0.438   
 9 hs_bare.earth.mean                  -0.0410    0.110     -0.371 0.711           -0.257     0.175   
10 hs_curvature.median                 -0.158     0.0794    -1.98  0.0472          -0.313    -0.00196 
11 hs_dnbr.median                      -0.235     0.104     -2.25  0.0244          -0.439    -0.0302  
12 hs_flow.accumulation.max             0.0329    0.0732     0.450 0.653           -0.111     0.176   
13 hs_slope.median                     -0.192     0.0655    -2.93  0.00337         -0.321    -0.0637  
14 ws_Kw                                0.127     0.347      0.367 0.714           -0.553     0.808   
15 ws_mi60_mean                        11.5      60.4        0.190 0.849         -107.      130.      
16 ws_RV.Silt                           0.0396    0.173      0.229 0.819           -0.300     0.379   

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik     deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>        <dbl>            <dbl>
1    78    16     6  119.  131.  133.  -59.7 0.0000000266            0.334

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0431 0.0899 0.300 0.520

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.98389, p-value = 0.4308


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 29.946, df = 15, p-value = 0.01212


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -1.9293, p-value = 0.9732
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
     -0.162905019      -0.012987013       0.006038376 


> # Stop redirecting output
> sink()
