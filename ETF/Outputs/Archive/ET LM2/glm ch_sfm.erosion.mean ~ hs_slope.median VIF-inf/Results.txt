
> # Fit the linear model using SSN2
> # Purpose: Model the relationship between deposition and various stream and watershed characteristics
> # ssn_mo .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
     Min       1Q   Median       3Q      Max 
-0.87720 -0.26871 -0.00093  0.20230  0.55032 

Coefficients (fixed):
                                   Estimate Std. Error z value Pr(>|z|)    
(Intercept)                        -2.06710    0.33542  -6.163 7.15e-10 ***
hs_slope.median                     0.48451    0.43390   1.117   0.2641    
ch_channel.width.over.valley.width -0.18452    0.14492  -1.273   0.2029    
ws_mi60_mean                       -0.44570    0.51750  -0.861   0.3891    
ws_sbs_mean                         0.24310    0.25636   0.948   0.3430    
hs_area                            -0.17246    0.13626  -1.266   0.2056    
ch_slope.over.width.central.diff    0.10278    0.05677   1.810   0.0702 .  
hs_aspect.median                    0.37898    0.20950   1.809   0.0705 .  
ch_valley_width                    -0.15153    0.09231  -1.642   0.1007    
hs_dnbr.median                     -0.19758    0.19088  -1.035   0.3006    
hs_bare.earth.mean                 -0.04784    0.08571  -0.558   0.5767    
hs_curvature.median                -0.02152    0.09430  -0.228   0.8195    
ch_slope.median                     0.15248    0.24847   0.614   0.5394    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.1392

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  5.964e-03
  tailup exponential         range  2.656e+02
     euclid gaussian  de (parsill)  4.570e-01
     euclid gaussian         range  7.967e+01
              nugget        nugget  1.880e-01
          dispersion    dispersion  4.502e+00


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)    0.139  
2 tailup_de             0.00789
3 taildown_de           0      
4 euclid_de             0.604  
5 nugget                0.249  

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 13 × 7
   term                               estimate std.error statistic  p.value conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>
 1 (Intercept)                         -2.07      0.335     -6.16  7.15e-10 -2.72      -1.41  
 2 ch_channel.width.over.valley.width  -0.185     0.145     -1.27  2.03e- 1 -0.469      0.0995
 3 ch_slope.median                      0.152     0.248      0.614 5.39e- 1 -0.335      0.639 
 4 ch_slope.over.width.central.diff     0.103     0.0568     1.81  7.02e- 2 -0.00849    0.214 
 5 ch_valley_width                     -0.152     0.0923    -1.64  1.01e- 1 -0.332      0.0294
 6 hs_area                             -0.172     0.136     -1.27  2.06e- 1 -0.440      0.0946
 7 hs_aspect.median                     0.379     0.210      1.81  7.05e- 2 -0.0316     0.790 
 8 hs_bare.earth.mean                  -0.0478    0.0857    -0.558 5.77e- 1 -0.216      0.120 
 9 hs_curvature.median                 -0.0215    0.0943    -0.228 8.19e- 1 -0.206      0.163 
10 hs_dnbr.median                      -0.198     0.191     -1.04  3.01e- 1 -0.572      0.177 
11 hs_slope.median                      0.485     0.434      1.12  2.64e- 1 -0.366      1.33  
12 ws_mi60_mean                        -0.446     0.517     -0.861 3.89e- 1 -1.46       0.569 
13 ws_sbs_mean                          0.243     0.256      0.948 3.43e- 1 -0.259      0.746 

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1    98    13     6 -20.3 -8.35 -7.42   10.2     9.77            0.139

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0259 0.0187 0.137 0.558

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.98597, p-value = 0.3867


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 23.031, df = 12, p-value = 0.02747


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -1.0053, p-value = 0.8426
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
     -0.080248555      -0.010309278       0.004840179 


> # Stop redirecting output
> sink()
