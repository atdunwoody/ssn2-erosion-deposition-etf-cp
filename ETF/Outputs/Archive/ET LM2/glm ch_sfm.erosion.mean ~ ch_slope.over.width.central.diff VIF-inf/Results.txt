
> # Fit the linear model using SSN2
> # Purpose: Model the relationship between deposition and various stream and watershed characteristics
> # ssn_mo .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
       Min         1Q     Median         3Q        Max 
-2.561e-04 -6.823e-05 -1.780e-06  6.630e-05  2.526e-04 

Coefficients (fixed):
                                  Estimate Std. Error z value Pr(>|z|)    
(Intercept)                      -2.345330   0.271830  -8.628   <2e-16 ***
ch_slope.over.width.central.diff -1.578433   0.747598  -2.111   0.0347 *  
ch_stream.power.central.diff      1.764943   0.791276   2.231   0.0257 *  
hs_area                          -0.177912   0.103497  -1.719   0.0856 .  
hs_dnbr.median                   -0.007276   0.146330  -0.050   0.9603    
hs_bare.earth.mean               -0.143614   0.072730  -1.975   0.0483 *  
hs_curvature.median               0.071486   0.089587   0.798   0.4249    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.1186

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  5.466e-01
  tailup exponential         range  8.013e+01
     euclid gaussian  de (parsill)  1.707e-03
     euclid gaussian         range  1.128e-01
              nugget        nugget  3.114e-01
          dispersion    dispersion  1.449e+04


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)    0.119  
2 tailup_de             0.560  
3 taildown_de           0      
4 euclid_de             0.00175
5 nugget                0.319  

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 7 × 7
  term                             estimate std.error statistic p.value conf.low conf.high
  <chr>                               <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>
1 (Intercept)                      -2.35       0.272    -8.63    0        -2.88   -1.81   
2 ch_slope.over.width.central.diff -1.58       0.748    -2.11    0.0347   -3.04   -0.113  
3 ch_stream.power.central.diff      1.76       0.791     2.23    0.0257    0.214   3.32   
4 hs_area                          -0.178      0.103    -1.72    0.0856   -0.381   0.0249 
5 hs_bare.earth.mean               -0.144      0.0727   -1.97    0.0483   -0.286  -0.00107
6 hs_curvature.median               0.0715     0.0896    0.798   0.425    -0.104   0.247  
7 hs_dnbr.median                   -0.00728    0.146    -0.0497  0.960    -0.294   0.280  

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik    deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>       <dbl>            <dbl>
1    98     7     6 -30.9 -18.9 -17.9   15.4 0.000000937            0.119

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0315 0.0216 0.147 0.711

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.9894, p-value = 0.6307


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 14.447, df = 6, p-value = 0.02503


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -2.0177, p-value = 0.9782
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
     -0.150607447      -0.010309278       0.004834905 


> # Stop redirecting output
> sink()
