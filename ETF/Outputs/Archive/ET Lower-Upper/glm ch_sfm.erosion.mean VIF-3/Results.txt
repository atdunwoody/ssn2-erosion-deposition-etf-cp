
> model_name
[1] "glm ch_sfm.erosion.mean VIF-3"

> model_formula
ch_sfm.erosion.mean ~ ws_accum_precip_mean + ws_flow.accum_max + 
    ws_bare_earth_mean + ws_Kw + ch_slope.median + ch_curvature.median + 
    ch_valley_width + ch_central.slope.difference + ch_channel.width.over.valley.width + 
    ch_slope.over.width.central.diff + hs_hillslope.length + 
    hs_slope.median + hs_aspect.median + hs_curvature.median + 
    hs_bare.earth.mean + hs_dnbr.median

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
    Min      1Q  Median      3Q     Max 
-2.5309 -0.2808 -0.0311  0.1906  1.1592 

Coefficients (fixed):
                                    Estimate Std. Error z value Pr(>|z|)   
(Intercept)                        -1.980818   1.422248  -1.393  0.16370   
ws_accum_precip_mean                0.205239   0.199824   1.027  0.30437   
ws_flow.accum_max                  -0.116571   0.353295  -0.330  0.74143   
ws_bare_earth_mean                  0.288232   0.147384   1.956  0.05051 . 
ws_Kw                              -0.269532   0.229446  -1.175  0.24011   
ch_slope.median                     0.047633   0.046352   1.028  0.30412   
ch_curvature.median                 0.045881   0.043360   1.058  0.28999   
ch_valley_width                    -0.081621   0.058786  -1.388  0.16500   
ch_central.slope.difference        -0.002482   0.025627  -0.097  0.92284   
ch_channel.width.over.valley.width  0.029699   0.056337   0.527  0.59808   
ch_slope.over.width.central.diff    0.028827   0.015385   1.874  0.06097 . 
hs_hillslope.length                -0.001956   0.033258  -0.059  0.95310   
hs_slope.median                    -0.010113   0.105496  -0.096  0.92363   
hs_aspect.median                    0.176987   0.056768   3.118  0.00182 **
hs_curvature.median                -0.004616   0.030723  -0.150  0.88058   
hs_bare.earth.mean                  0.073482   0.080900   0.908  0.36371   
hs_dnbr.median                     -0.124764   0.063566  -1.963  0.04968 * 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.03061

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  2.440e-01
  tailup exponential         range  4.550e+01
     euclid gaussian  de (parsill)  4.356e+00
     euclid gaussian         range  3.108e+03
              nugget        nugget  3.076e-02
          dispersion    dispersion  4.244e+00


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)    0.0306 
2 tailup_de             0.0511 
3 taildown_de           0      
4 euclid_de             0.912  
5 nugget                0.00644

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 17 × 7
   term                               estimate std.error statistic p.value  conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>   <dbl>     <dbl>     <dbl>
 1 (Intercept)                        -1.98       1.42     -1.39   0.164   -4.77      0.807   
 2 ch_central.slope.difference        -0.00248    0.0256   -0.0969 0.923   -0.0527    0.0477  
 3 ch_channel.width.over.valley.width  0.0297     0.0563    0.527  0.598   -0.0807    0.140   
 4 ch_curvature.median                 0.0459     0.0434    1.06   0.290   -0.0391    0.131   
 5 ch_slope.median                     0.0476     0.0464    1.03   0.304   -0.0432    0.138   
 6 ch_slope.over.width.central.diff    0.0288     0.0154    1.87   0.0610  -0.00133   0.0590  
 7 ch_valley_width                    -0.0816     0.0588   -1.39   0.165   -0.197     0.0336  
 8 hs_aspect.median                    0.177      0.0568    3.12   0.00182  0.0657    0.288   
 9 hs_bare.earth.mean                  0.0735     0.0809    0.908  0.364   -0.0851    0.232   
10 hs_curvature.median                -0.00462    0.0307   -0.150  0.881   -0.0648    0.0556  
11 hs_dnbr.median                     -0.125      0.0636   -1.96   0.0497  -0.249    -0.000177
12 hs_hillslope.length                -0.00196    0.0333   -0.0588 0.953   -0.0671    0.0632  
13 hs_slope.median                    -0.0101     0.105    -0.0959 0.924   -0.217     0.197   
14 ws_accum_precip_mean                0.205      0.200     1.03   0.304   -0.186     0.597   
15 ws_bare_earth_mean                  0.288      0.147     1.96   0.0505  -0.000635  0.577   
16 ws_flow.accum_max                  -0.117      0.353    -0.330  0.741   -0.809     0.576   
17 ws_Kw                              -0.270      0.229    -1.17   0.240   -0.719     0.180   

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1   547    17     6 -589. -577. -577.   294.     81.2           0.0306

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0162 0.0140 0.118 0.380

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.97606, p-value = 8.466e-08


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 45.719, df = 16, p-value = 0.0001076


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -5.0946, p-value = 1
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
    -0.1537429126     -0.0018315018      0.0008891177 


> # Stop redirecting output
> sink()
