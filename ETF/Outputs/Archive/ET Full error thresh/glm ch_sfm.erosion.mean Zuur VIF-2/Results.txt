ET_FULL
No threshold of erosion pixel count for inclusion

> model_name
[1] "glm ch_sfm.erosion.mean Zuur VIF-2"

> model_formula
ch_sfm.erosion.mean ~ ws_flow.accum.max + ws_slope.mean + ws_bare.earth.mean + 
    ws_drainage_density + ws_RV.Sand + ch_curvature.median + 
    ch_valley_width + ch_central.slope.difference + ch_channel.width.over.valley.width + 
    ch_stream.power.central.diff + hs_hillslope.length + hs_slope.median + 
    hs_northness.median + hs_eastness.median + hs_curvature.median + 
    hs_bare.earth.mean + hs_ndvi.range + hs_dnbr.median + hs_drainage_density + 
    flow.accumulation.max

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
     Min       1Q   Median       3Q      Max 
-6.30725 -0.29256 -0.04886  0.17117  1.76129 

Coefficients (fixed):
                                    Estimate Std. Error z value Pr(>|z|)    
(Intercept)                        -1.716985   0.181924  -9.438   <2e-16 ***
ws_flow.accum.max                   0.060288   0.139361   0.433   0.6653    
ws_slope.mean                       0.201991   0.130074   1.553   0.1204    
ws_bare.earth.mean                 -0.015283   0.075889  -0.201   0.8404    
ws_drainage_density                 0.004593   0.008075   0.569   0.5695    
ws_RV.Sand                          0.070641   0.044993   1.570   0.1164    
ch_curvature.median                -0.017211   0.030919  -0.557   0.5778    
ch_valley_width                    -0.066806   0.041385  -1.614   0.1065    
ch_central.slope.difference         0.013377   0.016936   0.790   0.4296    
ch_channel.width.over.valley.width  0.022934   0.043877   0.523   0.6012    
ch_stream.power.central.diff       -0.001619   0.005425  -0.298   0.7654    
hs_hillslope.length                -0.028723   0.025413  -1.130   0.2584    
hs_slope.median                     0.004491   0.053547   0.084   0.9332    
hs_northness.median                 0.004844   0.035300   0.137   0.8909    
hs_eastness.median                 -0.017579   0.024584  -0.715   0.4746    
hs_curvature.median                -0.028529   0.016873  -1.691   0.0909 .  
hs_bare.earth.mean                  0.027284   0.038247   0.713   0.4756    
hs_ndvi.range                      -0.079233   0.038697  -2.048   0.0406 *  
hs_dnbr.median                     -0.093638   0.046611  -2.009   0.0445 *  
hs_drainage_density                -0.486076   7.523372  -0.065   0.9485    
flow.accumulation.max              -0.033870   0.029014  -1.167   0.2431    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.01547

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  2.404e-01
  tailup exponential         range  2.198e+02
     euclid gaussian  de (parsill)  7.488e-02
     euclid gaussian         range  2.078e+03
              nugget        nugget  1.295e-02
          dispersion    dispersion  4.143e+00


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)     0.0155
2 tailup_de              0.721 
3 taildown_de            0     
4 euclid_de              0.225 
5 nugget                 0.0388

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 21 × 7
   term                               estimate std.error statistic p.value conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>
 1 (Intercept)                        -1.72      0.182      -9.44   0       -2.07    -1.36   
 2 ch_central.slope.difference         0.0134    0.0169      0.790  0.430   -0.0198   0.0466 
 3 ch_channel.width.over.valley.width  0.0229    0.0439      0.523  0.601   -0.0631   0.109  
 4 ch_curvature.median                -0.0172    0.0309     -0.557  0.578   -0.0778   0.0434 
 5 ch_stream.power.central.diff       -0.00162   0.00543    -0.298  0.765   -0.0123   0.00901
 6 ch_valley_width                    -0.0668    0.0414     -1.61   0.106   -0.148    0.0143 
 7 flow.accumulation.max              -0.0339    0.0290     -1.17   0.243   -0.0907   0.0230 
 8 hs_bare.earth.mean                  0.0273    0.0382      0.713  0.476   -0.0477   0.102  
 9 hs_curvature.median                -0.0285    0.0169     -1.69   0.0909  -0.0616   0.00454
10 hs_dnbr.median                     -0.0936    0.0466     -2.01   0.0445  -0.185   -0.00228
# ℹ 11 more rows
# ℹ Use `print(n = ...)` to see more rows

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1   892    21     6  186.  198.  198.  -93.2     177.           0.0155

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0127 0.0187 0.137 0.319

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.85179, p-value < 2.2e-16


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 52.638, df = 20, p-value = 9.186e-05


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -2.6969, p-value = 0.9965
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
    -0.0626333675     -0.0011223345      0.0005201907 


> # Stop redirecting output
> sink()
