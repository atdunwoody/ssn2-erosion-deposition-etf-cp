
> model_name
[1] "glm ch_sfm.erosion.mean Zuur VIF-2"

> model_formula
ch_sfm.erosion.mean ~ ws_dnbr.mean + ws_bare.earth.mean + ch_slope.median + 
    ch_curvature.median + ch_central.slope.difference + ch_channel.width.over.valley.width + 
    ch_stream.power.central.diff + hs_hillslope.length + hs_slope.median + 
    hs_eastness.median + hs_curvature.median + hs_ndvi.range + 
    hs_dnbr.median + hs_drainage_density

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
      Min        1Q    Median        3Q       Max 
-0.573944 -0.143091 -0.007887  0.107277  0.533722 

Coefficients (fixed):
                                   Estimate Std. Error z value Pr(>|z|)    
(Intercept)                        -1.30767    0.18739  -6.978 2.99e-12 ***
ws_dnbr.mean                       -0.24164    0.22633  -1.068  0.28568    
ws_bare.earth.mean                  0.06675    0.09907   0.674  0.50045    
ch_slope.median                    -0.01225    0.10444  -0.117  0.90661    
ch_curvature.median                 0.07207    0.06103   1.181  0.23763    
ch_central.slope.difference        -0.01708    0.04122  -0.414  0.67852    
ch_channel.width.over.valley.width  0.18467    0.08881   2.079  0.03759 *  
ch_stream.power.central.diff        0.11911    0.04304   2.767  0.00565 ** 
hs_hillslope.length                -0.14380    0.08621  -1.668  0.09531 .  
hs_slope.median                    -0.10740    0.07360  -1.459  0.14448    
hs_eastness.median                 -0.13560    0.09845  -1.377  0.16843    
hs_curvature.median                -0.10431    0.05109  -2.042  0.04117 *  
hs_ndvi.range                      -0.27003    0.10182  -2.652  0.00800 ** 
hs_dnbr.median                     -0.16609    0.12936  -1.284  0.19917    
hs_drainage_density                 1.11734   25.88454   0.043  0.96557    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.166

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)    0.29780
  tailup exponential         range   93.47916
     euclid gaussian  de (parsill)    0.03012
     euclid gaussian         range  376.54744
              nugget        nugget    0.08486
          dispersion    dispersion   10.12906


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp            proportion
  <chr>                   <dbl>
1 Covariates (PR-sq)     0.166 
2 tailup_de              0.602 
3 taildown_de            0     
4 euclid_de              0.0609
5 nugget                 0.171 

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 15 × 7
   term                               estimate std.error statistic  p.value conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>
 1 (Intercept)                         -1.31      0.187    -6.98   2.99e-12  -1.67    -0.940  
 2 ch_central.slope.difference         -0.0171    0.0412   -0.414  6.79e- 1  -0.0979   0.0637 
 3 ch_channel.width.over.valley.width   0.185     0.0888    2.08   3.76e- 2   0.0106   0.359  
 4 ch_curvature.median                  0.0721    0.0610    1.18   2.38e- 1  -0.0475   0.192  
 5 ch_slope.median                     -0.0123    0.104    -0.117  9.07e- 1  -0.217    0.192  
 6 ch_stream.power.central.diff         0.119     0.0430    2.77   5.65e- 3   0.0348   0.203  
 7 hs_curvature.median                 -0.104     0.0511   -2.04   4.12e- 2  -0.204   -0.00418
 8 hs_dnbr.median                      -0.166     0.129    -1.28   1.99e- 1  -0.420    0.0875 
 9 hs_drainage_density                  1.12     25.9       0.0432 9.66e- 1 -49.6     51.9    
10 hs_eastness.median                  -0.136     0.0985   -1.38   1.68e- 1  -0.329    0.0574 
11 hs_hillslope.length                 -0.144     0.0862   -1.67   9.53e- 2  -0.313    0.0252 
12 hs_ndvi.range                       -0.270     0.102    -2.65   8.00e- 3  -0.470   -0.0705 
13 hs_slope.median                     -0.107     0.0736   -1.46   1.44e- 1  -0.252    0.0368 
14 ws_bare.earth.mean                   0.0668    0.0991    0.674  5.00e- 1  -0.127    0.261  
15 ws_dnbr.mean                        -0.242     0.226    -1.07   2.86e- 1  -0.685    0.202  

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1   176    15     6  199.  211.  211.  -99.5     6.26            0.166

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias   MSPE RMSPE   RAV
    <dbl>  <dbl> <dbl> <dbl>
1 -0.0419 0.0588 0.242 0.427

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.99682, p-value = 0.9751


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 18.3, df = 14, p-value = 0.1935


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -2.9669, p-value = 0.9985
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
     -0.160972433      -0.005714286       0.002738462 


> # Stop redirecting output
> sink()
