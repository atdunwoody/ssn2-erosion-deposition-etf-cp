ET-LOWER
Minimum 100 5cm pixels of erosion needed per segment for inclusion

> model_name
[1] "glm ch_sfm.erosion.norm VIF 3 100ct thresh"

> model_formula
ch_sfm.erosion.norm ~ ch_slope.median + ch_flow.accumulation.max + 
    ch_curvature.median + ch_valley_width + ch_central.slope.difference + 
    ch_channel.width.over.valley.width + ch_slope.over.width.central.diff + 
    hs_area + hs_slope.median + hs_eastness.median + hs_curvature.median + 
    hs_ndvi.range + hs_dnbr.median + hs_drainage_density

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum")

Deviance Residuals:
       Min         1Q     Median         3Q        Max 
-0.0070917 -0.0016667  0.0000772  0.0015103  0.0068540 

Coefficients (fixed):
                                    Estimate Std. Error z value Pr(>|z|)    
(Intercept)                          0.07162    0.16155   0.443  0.65751    
ch_slope.median                      0.21851    0.15029   1.454  0.14596    
ch_flow.accumulation.max             1.30897    0.28874   4.533 5.81e-06 ***
ch_curvature.median                  0.02483    0.10655   0.233  0.81576    
ch_valley_width                     -0.41059    0.15866  -2.588  0.00966 ** 
ch_central.slope.difference          0.07123    0.07860   0.906  0.36476    
ch_channel.width.over.valley.width  -0.28161    0.17129  -1.644  0.10017    
ch_slope.over.width.central.diff     0.02645    0.07671   0.345  0.73026    
hs_area                              0.01978    0.11720   0.169  0.86597    
hs_slope.median                     -0.12173    0.11210  -1.086  0.27753    
hs_eastness.median                  -0.10291    0.14229  -0.723  0.46951    
hs_curvature.median                  0.06978    0.10336   0.675  0.49962    
hs_ndvi.range                        0.06150    0.15706   0.392  0.69537    
hs_dnbr.median                      -0.39137    0.20229  -1.935  0.05303 .  
hs_drainage_density                -36.29232   45.59787  -0.796  0.42608    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.1683

Coefficients (covariance):
              Effect     Parameter   Estimate
  tailup exponential  de (parsill)  6.465e-01
  tailup exponential         range  1.565e+01
     euclid gaussian  de (parsill)  2.372e-08
     euclid gaussian         range  8.643e+04
              nugget        nugget  2.164e-02
          dispersion    dispersion  5.548e+02


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 5 × 2
  varcomp              proportion
  <chr>                     <dbl>
1 Covariates (PR-sq) 0.168       
2 tailup_de          0.805       
3 taildown_de        0           
4 euclid_de          0.0000000295
5 nugget             0.0269      

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 15 × 7
   term                               estimate std.error statistic    p.value  conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>      <dbl>     <dbl>     <dbl>
 1 (Intercept)                          0.0716    0.162      0.443 0.658        -0.245    0.388  
 2 ch_central.slope.difference          0.0712    0.0786     0.906 0.365        -0.0828   0.225  
 3 ch_channel.width.over.valley.width  -0.282     0.171     -1.64  0.100        -0.617    0.0541 
 4 ch_curvature.median                  0.0248    0.107      0.233 0.816        -0.184    0.234  
 5 ch_flow.accumulation.max             1.31      0.289      4.53  0.00000581    0.743    1.87   
 6 ch_slope.median                      0.219     0.150      1.45  0.146        -0.0760   0.513  
 7 ch_slope.over.width.central.diff     0.0264    0.0767     0.345 0.730        -0.124    0.177  
 8 ch_valley_width                     -0.411     0.159     -2.59  0.00966      -0.722   -0.0996 
 9 hs_area                              0.0198    0.117      0.169 0.866        -0.210    0.249  
10 hs_curvature.median                  0.0698    0.103      0.675 0.500        -0.133    0.272  
11 hs_dnbr.median                      -0.391     0.202     -1.93  0.0530       -0.788    0.00511
12 hs_drainage_density                -36.3      45.6       -0.796 0.426      -126.      53.1    
13 hs_eastness.median                  -0.103     0.142     -0.723 0.470        -0.382    0.176  
14 hs_ndvi.range                        0.0615    0.157      0.392 0.695        -0.246    0.369  
15 hs_slope.median                     -0.122     0.112     -1.09  0.278        -0.341    0.0980 

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1   107    15     6  369.  381.  381.  -184. 0.000664            0.168

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
    bias  MSPE RMSPE   RAV
   <dbl> <dbl> <dbl> <dbl>
1 -0.120 0.723 0.850 0.728

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.98881, p-value = 0.52


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 20.444, df = 14, p-value = 0.1167


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -2.5563, p-value = 0.9947
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
     -0.175219908      -0.009433962       0.004205943 


> # Stop redirecting output
> sink()
