
> model_name
[1] "glm ch_sfm.erosion.norm VIF 2 100 ct thresh ws_re"

> model_formula
ch_sfm.erosion.norm ~ ws_flow.accum.max + ws_slope.mean + ws_bare.earth.mean + 
    ws_drainage_density + ws_RV.Sand + ch_curvature.median + 
    ch_valley_width + ch_change.in.slope.over.width + ch_channel.width.over.valley.width + 
    ch_stream.power.central.diff + hs_hillslope.length + hs_slope.median + 
    hs_northness.median + hs_eastness.median + hs_curvature.median + 
    hs_ndvi.range + hs_dnbr.median + hs_drainage_density + flow.accumulation.max

> ssn_mod <- ssn_glm(
+   formula = model_formula,
+   ssn.object = ET_ssn,
+   family = "Gamma",
+   tailup_type = "exponential",
+   taildown_type = .... [TRUNCATED] 

> # Print the summary of the model to the file and console
> print(summary(ssn_mod))

Call:
ssn_glm(formula = model_formula, ssn.object = ET_ssn, family = "Gamma", 
    tailup_type = "exponential", taildown_type = "none", euclid_type = "gaussian", 
    additive = "afv_flow_accum", random = ~as.factor(ch_watershed))

Deviance Residuals:
       Min         1Q     Median         3Q        Max 
-1.8782655 -0.2339728 -0.0003834  0.1816483  0.9904105 

Coefficients (fixed):
                                    Estimate Std. Error z value Pr(>|z|)    
(Intercept)                        -1.949913   0.714828  -2.728  0.00638 ** 
ws_flow.accum.max                  -0.404024   0.228735  -1.766  0.07734 .  
ws_slope.mean                       1.139317   0.257134   4.431 9.39e-06 ***
ws_bare.earth.mean                 -0.227948   0.149620  -1.524  0.12763    
ws_drainage_density                 0.038633   0.018219   2.120  0.03396 *  
ws_RV.Sand                         -0.297464   0.379620  -0.784  0.43329    
ch_curvature.median                -0.008997   0.065960  -0.136  0.89150    
ch_valley_width                    -0.049524   0.074984  -0.660  0.50896    
ch_change.in.slope.over.width      -0.018392   0.017042  -1.079  0.28049    
ch_channel.width.over.valley.width  0.050237   0.075984   0.661  0.50851    
ch_stream.power.central.diff        0.024825   0.013866   1.790  0.07340 .  
hs_hillslope.length                -0.045256   0.045787  -0.988  0.32296    
hs_slope.median                     0.073010   0.089769   0.813  0.41604    
hs_northness.median                -0.128885   0.066777  -1.930  0.05360 .  
hs_eastness.median                 -0.020493   0.045418  -0.451  0.65184    
hs_curvature.median                 0.011279   0.030421   0.371  0.71080    
hs_ndvi.range                      -0.082624   0.065184  -1.268  0.20496    
hs_dnbr.median                      0.026938   0.078471   0.343  0.73138    
hs_drainage_density                 1.009103  13.868616   0.073  0.94200    
flow.accumulation.max              -0.141148   0.077038  -1.832  0.06692 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pseudo R-squared: 0.03101

Coefficients (covariance):
              Effect                    Parameter   Estimate
  tailup exponential                 de (parsill)  1.494e+00
  tailup exponential                        range  8.519e+01
     euclid gaussian                 de (parsill)  1.352e+00
     euclid gaussian                        range  3.729e+03
              nugget                       nugget  6.909e-04
          dispersion                   dispersion  3.482e+00
              random  1 | as.factor(ch_watershed)  1.759e-01


> # Print variance components of the model
> varcomp(ssn_mod)
# A tibble: 6 × 2
  varcomp                     proportion
  <chr>                            <dbl>
1 Covariates (PR-sq)            0.0310  
2 tailup_de                     0.479   
3 taildown_de                   0       
4 euclid_de                     0.433   
5 nugget                        0.000221
6 1 | as.factor(ch_watershed)   0.0564  

> # Tidy the model output with confidence intervals and print
> print(tidy(ssn_mod, conf.int = TRUE))  
# A tibble: 20 × 7
   term                               estimate std.error statistic    p.value  conf.low conf.high
   <chr>                                 <dbl>     <dbl>     <dbl>      <dbl>     <dbl>     <dbl>
 1 (Intercept)                        -1.95       0.715    -2.73   0.00638     -3.35     -0.549  
 2 ch_change.in.slope.over.width      -0.0184     0.0170   -1.08   0.280       -0.0518    0.0150 
 3 ch_channel.width.over.valley.width  0.0502     0.0760    0.661  0.509       -0.0987    0.199  
 4 ch_curvature.median                -0.00900    0.0660   -0.136  0.891       -0.138     0.120  
 5 ch_stream.power.central.diff        0.0248     0.0139    1.79   0.0734      -0.00235   0.0520 
 6 ch_valley_width                    -0.0495     0.0750   -0.660  0.509       -0.196     0.0974 
 7 flow.accumulation.max              -0.141      0.0770   -1.83   0.0669      -0.292     0.00984
 8 hs_curvature.median                 0.0113     0.0304    0.371  0.711       -0.0483    0.0709 
 9 hs_dnbr.median                      0.0269     0.0785    0.343  0.731       -0.127     0.181  
10 hs_drainage_density                 1.01      13.9       0.0728 0.942      -26.2      28.2    
11 hs_eastness.median                 -0.0205     0.0454   -0.451  0.652       -0.110     0.0685 
12 hs_hillslope.length                -0.0453     0.0458   -0.988  0.323       -0.135     0.0445 
13 hs_ndvi.range                      -0.0826     0.0652   -1.27   0.205       -0.210     0.0451 
14 hs_northness.median                -0.129      0.0668   -1.93   0.0536      -0.260     0.00200
15 hs_slope.median                     0.0730     0.0898    0.813  0.416       -0.103     0.249  
16 ws_bare.earth.mean                 -0.228      0.150    -1.52   0.128       -0.521     0.0653 
17 ws_drainage_density                 0.0386     0.0182    2.12   0.0340       0.00292   0.0743 
18 ws_flow.accum.max                  -0.404      0.229    -1.77   0.0773      -0.852     0.0443 
19 ws_RV.Sand                         -0.297      0.380    -0.784  0.433       -1.04      0.447  
20 ws_slope.mean                       1.14       0.257     4.43   0.00000939   0.635     1.64   

> # Provide a glance summary of the model and print
> print(glance(ssn_mod))
# A tibble: 1 × 9
      n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared
  <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl>
1   645    20     7 1009. 1023. 1023.  -504.     94.0           0.0310

> # Perform Leave-One-Out Cross Validation and print
> print("Leave One Out Cross Validation")
[1] "Leave One Out Cross Validation"

> loocv_results <- loocv(ssn_mod)

> print(loocv_results)
# A tibble: 1 × 4
     bias  MSPE RMSPE   RAV
    <dbl> <dbl> <dbl> <dbl>
1 -0.0768 0.163 0.404 0.727

> # Stop redirecting output
> sink()

> print("")
[1] ""

> # ----------------------------#
> # 10. Statistical Tests
> # ----------------------------#
> 
> 
> # --------- Shapiro-Wilk Test for Normality ---- .... [TRUNCATED] 
[1] "-------- Shapiro-Wilk Test for Normality ---------"

> print("  - Normality: To check if the residuals are normally distributed.")
[1] "  - Normality: To check if the residuals are normally distributed."

> print("  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (residuals are normally distributed)."

> print("  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (residuals are not normally distributed).\n"

> shapiro_test <- shapiro.test(residuals)

> print("Shapiro-Wilk Test Results:")
[1] "Shapiro-Wilk Test Results:"

> print(shapiro_test)

	Shapiro-Wilk normality test

data:  residuals
W = 0.96812, p-value = 1.252e-10


> # --------- Breusch-Pagan Test for Homoscedasticity ---------
> print("-------- Breusch-Pagan Test for Homoscedasticity ---------")
[1] "-------- Breusch-Pagan Test for Homoscedasticity ---------"

> print("  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values.")
[1] "  - Homoscedasticity: To check if residuals have constant variance across all levels of fitted values."

> print("  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (homoscedasticity holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (heteroscedasticity present).\n"

> # Extract the model frame from the ssn_lm model
> data_ssn <- model.frame(ssn_mod)

> # Perform Breusch-Pagan Test
> bp_test <- bptest(ssn_mod)

> print("Breusch-Pagan Test Results:")
[1] "Breusch-Pagan Test Results:"

> print(bp_test)

	studentized Breusch-Pagan test

data:  ssn_mod
BP = 59.158, df = 19, p-value = 5.254e-06


> # --------- Moran's I Test for Spatial Autocorrelation ---------
> print("\n-------- Moran's I Test for Spatial Autocorrelation ---------")
[1] "\n-------- Moran's I Test for Spatial Autocorrelation ---------"

> print("  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals.")
[1] "  - Spatial Autocorrelation: To determine if there is spatial autocorrelation in the residuals."

> print("  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds).")
[1] "  - p-value > 0.05: Fail to reject null hypothesis (lack of spatial autocorrelation in residuals holds)."

> print("  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n")
[1] "  - p-value <= 0.05: Reject null hypothesis (spatial autocorrelation present).\n"

> sink()

> print("Moran's I Test Results:")
[1] "Moran's I Test Results:"

> print(moran_test)

	Moran I test under randomisation

data:  residuals  
weights: lw    

Moran I statistic standard deviate = -7.382, p-value = 1
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
    -0.2015572429     -0.0015527950      0.0007340585 


> # Stop redirecting output
> sink()
